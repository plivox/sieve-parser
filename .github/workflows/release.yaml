name: Release

permissions:
  contents: write

on:
  # push:
  #   tags:
  #     - v[0-9]+.*
  push:
    branches: [main]

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - uses: taiki-e/install-action@parse-changelog

      - name: Create Release and delete if exists
        if: env.RELEASE_VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete --yes ${GITHUB_REF_NAME} >/dev/null 2>&1 || true
          parse-changelog CHANGELOG.md ${RELEASE_VERSION} | \
            gh release create ${GITHUB_REF_NAME} --title ${RELEASE_VERSION} --notes-file -

  build-release:
    name: Build Release
    needs: create-release
    strategy:
      matrix:
        builder:
          - os: ubuntu-latest
            platform: linux/amd64
            target: x86_64-unknown-linux-gnu
            assets-suffix: x86_64-linux

          - os: ubuntu-latest
            platform: linux/arm64
            target: aarch64-unknown-linux-gnu
            assets-suffix: aarch64-linux

          - os: ubuntu-latest
            platform: linux/amd64
            target: x86_64-apple-darwin
            assets-suffix: x86_64-darwin

          # - os: ubuntu-latest
          #   platform: linux/arm64
          #   target: aarch64-apple-darwin
          #   assets-suffix: aarch64-darwin

    runs-on: ${{ matrix.builder.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ matrix.builder.platform }}

      - name: Build and upload assets files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker run --platform ${{ matrix.builder.platform }} --rm \
            --volume ${{ github.workspace }}:/workspace --workdir /workspace \
            joseluisq/rust-linux-darwin-builder:1.73.0 \
            sh -c "cargo build --release --all-features --target ${{ matrix.builder.target }}"

          ls -l target/${{ matrix.builder.target }}/release

  # ASSET_NAME=sieve-parser-${{ matrix.builder.assets-suffix }}.zip

  # pushd target/${{ matrix.builder.target }}/release
  #   cp ../../../LICENSE .
  #   zip -9r ${ASSET_NAME} LICENSE sieve-parser
  #   gh release upload --clobber ${GITHUB_REF_NAME} ${ASSET_NAME}
  # popd

  # build-release:
  #   name: Build Release
  #   needs: create-release
  #   strategy:
  #     matrix:
  #       platform:
  #         - os: ubuntu-latest
  #           target: x86_64-unknown-linux-gnu
  #           assets-suffix: x86_64-linux

  #         # - os: ubuntu-latest
  #         #   target: aarch64-unknown-linux-gnu
  #         #   assets-suffix: aarch64-linux

  #         # - os: macos-latest
  #         #   target: x86_64-apple-darwin

  #         # - os: windows-latest
  #         #   target: x86_64-pc-windows-gnu

  #   runs-on: ${{ matrix.platform.os }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 1

  #     - name: Install Rust Toolchain
  #       uses: actions-rust-lang/setup-rust-toolchain@v1
  #       with:
  #         toolchain: stable
  #         target: ${{ matrix.platform.target }}

  #     - name: Build
  #       run: make build

  #     - name: Test
  #       run: make test

  #     - name: Upload assets files
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         echo ${RELEASE_VERSION}

  #         ASSET_NAME=sieve-parser-${{ matrix.platform.assets-suffix }}.zip

  #         pushd target/release
  #           cp ../../LICENSE .
  #           zip -9r ${ASSET_NAME} LICENSE sieve-parser
  #           gh release upload --clobber ${GITHUB_REF_NAME} ${ASSET_NAME}
  #         popd
